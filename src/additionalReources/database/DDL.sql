-- Tables Related to users

CREATE TABLE T_USER (
  USER_ID	 	INT 			NOT NULL  ,
  FIRST_NAME	VARCHAR(25) 	NOT NULL,
  LAST_NAME	VARCHAR(25)     NOT NULL,
  USER_NAME	VARCHAR(25) 	  NOT NULL UNIQUE ,
  PASSWORD	VARCHAR(25) 	  NOT NULL,
  EMAIL	VARCHAR(25) 	      NOT NULL,
  STATUS		CHAR(3)	 		NOT NULL,
  PRIMARY KEY (USER_ID)

);

CREATE TABLE T_ROLE (
  ROLE_ID INT NOT NULL ,
  ROLE_NAME VARCHAR(25) NOT NULL ,
  PRIMARY KEY (ROLE_ID),
  UNIQUE (ROLE_NAME)
);

CREATE TABLE T_USER_ROLE (
  USER_ROLE_ID INT NOT NULL ,
  USER_ID INT NOT NULL ,
  ROLE_ID INT     NOT NULL,
  UNIQUE (USER_ID,ROLE_ID),
  PRIMARY KEY (USER_ROLE_ID),
  FOREIGN KEY (USER_ID) REFERENCES T_USER(USER_ID),
  FOREIGN KEY (ROLE_ID) REFERENCES T_ROLE(ROLE_ID)
);

CREATE TABLE T_PRIVILEGE (
  PRIVILEGE_ID INT NOT NULL,
  DESCRIPTION VARCHAR(100) NOT NULL ,
  PRIMARY KEY(PRIVILEGE_ID),
  UNIQUE (DESCRIPTION)

);

CREATE TABLE T_ROLE_PRIVILEGE (
  ROLE_PRIVILEGE_ID INT NOT NULL ,
  ROLE_ID INT NOT NULL ,
  PRIVILEGE_ID INT NOT NULL ,
  UNIQUE (ROLE_ID,PRIVILEGE_ID),
  PRIMARY KEY (ROLE_PRIVILEGE_ID),
  FOREIGN KEY (PRIVILEGE_ID) REFERENCES T_PRIVILEGE(PRIVILEGE_ID),
  FOREIGN KEY (ROLE_ID) REFERENCES T_ROLE(ROLE_ID)
);
--
-- Tables Related to Jobs

CREATE TABLE T_JOB (
  JOB_ID INT NOT NULL,
  USER_ID INT NOT NULL,
   START_DATE DATE NOT NULL ,
  PRIMARY KEY(JOB_ID),
  FOREIGN KEY (USER_ID) REFERENCES T_USER(USER_ID)

);

CREATE TABLE T_POSITION (
  POSITION_ID INT NOT NULL,
  DESCRIPTION VARCHAR(100) NOT NULL ,
  PRIMARY KEY(POSITION_ID),
  UNIQUE (DESCRIPTION)

);

CREATE TABLE T_DEVICE (
  DEVICE_ID INT  NOT NULL ,
  DEVICE_CODE VARCHAR(100) NOT NULL ,
  PRIMARY KEY(DEVICE_ID),
  UNIQUE (DEVICE_CODE)

);

CREATE TABLE T_DEVICE_MAPPING (
  DEVICE_MAPPING_ID INT NOT NULL,
  JOB_ID INT NOT NULL,
  POSITION_ID INT NOT NULL,
  DEVICE_ID INT NOT NULL,
  PRIMARY KEY(DEVICE_MAPPING_ID),
  UNIQUE (JOB_ID,POSITION_ID,DEVICE_ID),
  FOREIGN KEY (JOB_ID) REFERENCES T_JOB(JOB_ID),
  FOREIGN KEY (POSITION_ID) REFERENCES T_POSITION(POSITION_ID),
  FOREIGN KEY (DEVICE_ID) REFERENCES T_DEVICE(DEVICE_ID)


);

--  -----------------------------------

CREATE TABLE T_CUSTOMER (
  CUSTOMER_ID INT NOT NULL,
  NAME VARCHAR (25) NOT NULL ,
  ADDRESS VARCHAR (100) NOT NULL ,
  EMAIL VARCHAR (100) NOT NULL ,
  PHONE VARCHAR (100) NOT NULL,
  PRIMARY KEY (CUSTOMER_ID)
);

CREATE TABLE T_VEHICLE (
  VEHICLE_ID INT NOT NULL ,
  NUMBER_PLATE CHAR (10) NOT NULL ,
  MANUFACT_DATE DATE NOT NULL ,
  ODOMETER INT NOT NULL,
  CUSTOMER INT NOT NULL,
  MODEL_ID INT NOT NULL,
  PRIMARY KEY (VEHICLE_ID) ,
  FOREIGN KEY (MODEL_ID) REFERENCES T_MODEL (VEHICLE_MODEL_ID),
  FOREIGN KEY (CUSTOMER) REFERENCES T_CUSTOMER (CUSTOMER_ID)
);

alter table T_JOB
add  VEHICLE_ID INT NOT NULL ,
 ADD CONSTRAINT FOREIGN KEY(VEHICLE_ID) REFERENCES T_VEHICLE (VEHICLE_ID);

CREATE TABLE T_MODEL (
  VEHICLE_MODEL_ID INT NOT NULL ,
  MANUFACTURER_ID INT NOT NULL ,
  VEHICLE_TYPE VARCHAR (10) NOT NULL ,
  ENGINE_SIZE INT NOT NULL,
  FUEL_TYPE VARCHAR (10) NOT NULL,
  VEHICLE_ID INT NOT NULL,
  PRIMARY KEY (VEHICLE_MODEL_ID) ,
  FOREIGN KEY (MANUFACTURER_ID) REFERENCES T_MANUFACTURER (MANUFACTURER_ID),
  FOREIGN KEY (VEHICLE_ID) REFERENCES T_VEHICLE (VEHICLE_ID)
);

CREATE TABLE T_MANUFACTURER (
  MANUFACTURER_ID INT NOT NULL ,
  MANUFACT_NAME CHAR (10) NOT NULL ,
  VEHICLE_ID INT NOT NULL,
  MODEL_ID INT NOT NULL,
  PRIMARY KEY (MANUFACTURER_ID),
  FOREIGN KEY (VEHICLE_ID) REFERENCES T_VEHICLE (VEHICLE_ID),
  FOREIGN KEY (MODEL_ID) REFERENCES T_MODEL(VEHICLE_MODEL_ID)
);

